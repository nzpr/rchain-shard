#!/bin/bash
set -e

if [[ -z "$BASH_SOURCE" ]]; then
	echo "Cannot run from stdin" >&2
	exit 1
fi

if [[ $# -ne 4 ]]; then
	echo "Usage: $0 <nodes-dir> <domain> <network-id> <count>" >&2
	exit 1
fi

out_dir="$1"
domain="$2"
network_id="$3"
count="$4"
scripts_dir="$(dirname "$0")"

cleanup()
{
	rm -r $venv_dir
}
trap cleanup EXIT
venv_dir="$(mktemp -d $(basename "$0").XXXXXXXX)"

python3 -mvenv $venv_dir
source $venv_dir/bin/activate
pip3 install -r "$scripts_dir/requirements.txt"

umask 077
mkdir -p "$out_dir"

for i in $(seq 0 $((count-1))); do
	host=node$i
	node_dir="$out_dir/$host"
	mkdir -p "$node_dir"
	$scripts_dir/generate-node-files $host-$network_id.$domain "$node_dir" "genesis_vaults.txt"
done

bootstrap_id="$($scripts_dir/pem-key-to-node-id $out_dir/node0/node.key.pem)"
bootstrap_url="rnode://$bootstrap_id@node0-$network_id.$domain?protocol=40400&discovery=40404"

echo "standalone = true" >> $out_dir/node0/rnode.conf
# send unapproved block to genesis validators often, to not prolong genesis
echo "casper.genesis-ceremony.approve-interval = 10s" >> $out_dir/node0/rnode.conf
echo "casper.genesis-ceremony.required-signatures = 0" >> $out_dir/node0/rnode.conf
#echo "casper.genesis-ceremony.required-signatures = $(($count-1))" >> $out_dir/node0/rnode.conf
echo "autopropose = true" >> $out_dir/node0/rnode.conf
echo "protocol-server.network-id = $network_id" >> $out_dir/node0/rnode.conf



for i in $(seq 1 $((count-1))); do
	host=node$i
	node_dir="$out_dir/$host"
	echo protocol-client.bootstrap=\"$bootstrap_url\" >> $node_dir/rnode.conf
	echo "autopropose = true" >> $node_dir/rnode.conf
	echo "protocol-server.network-id = $network_id" >> $node_dir/rnode.conf
	#echo "casper.genesis-ceremony.genesis-validator-mode = true" >> $node_dir/rnode.conf
	#echo "casper.genesis-ceremony.required-signatures = $(($count-1))" >> $node_dir/rnode.conf
	echo "casper.genesis-ceremony.genesis-validator-mode = false" >> $node_dir/rnode.conf
done
